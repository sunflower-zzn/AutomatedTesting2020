digraph cmd_method {
	"net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.blow1()V"
	"net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.testProgram()V"
	"net.mooctest.Datalog.compatibleWith(Lnet/mooctest/Fact;)Z" -> "Lnet/mooctest/Program net.mooctest.Program.query(Lnet/mooctest/Datalog;[Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;"
	"net.mooctest.Datalog.compatibleWith(Lnet/mooctest/Fact;)Z" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.substituteTo()V"
	"net.mooctest.Datalog.hashCode()I" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.hashCodeTest()V"
	"net.mooctest.Rule.getBody()[Lnet/mooctest/Datalog;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testRule()V"
	"net.mooctest.Fact.getPredicate()Lnet/mooctest/Predicate;" -> "Lnet/mooctest/Program net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z"
	"net.mooctest.Fact.getPredicate()Lnet/mooctest/Predicate;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Substitution.extendAll(Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Substitution.extendAll(Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "Lnet/mooctest/Rule net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;"
	"net.mooctest.Argument.getVariable()Lnet/mooctest/Variable;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Argument.getVariable()Lnet/mooctest/Variable;" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;"
	"net.mooctest.Argument.getVariable()Lnet/mooctest/Variable;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.toFact()V"
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
	"net.mooctest.Rule.<init>(Lnet/mooctest/Datalog;[Lnet/mooctest/Datalog;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testRule()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogSames()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.blowTestPredicate()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testPredicate()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogGets()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.test()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.<init>()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.<init>()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.substituteTo()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest3 net.mooctest.DatalogTest3.testFact()V"
	"net.mooctest.Predicate.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
	"net.mooctest.Argument.variable(Lnet/mooctest/Variable;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Value.getValue()Ljava/lang/String;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testValue()V"
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "Lnet/mooctest/Fact net.mooctest.Fact.toString()Ljava/lang/String;"
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testPredicate()V"
	"net.mooctest.Predicate.toString()Ljava/lang/String;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.toString()Ljava/lang/String;"
	"net.mooctest.Fact.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/DatalogTest3 net.mooctest.DatalogTest3.testFact()V"
	"net.mooctest.Argument.<init>(Lnet/mooctest/Value;Lnet/mooctest/Variable;Z)V" -> "Lnet/mooctest/Argument net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;"
	"net.mooctest.Argument.<init>(Lnet/mooctest/Value;Lnet/mooctest/Variable;Z)V" -> "Lnet/mooctest/Argument net.mooctest.Argument.variable(Lnet/mooctest/Variable;)Lnet/mooctest/Argument;"
	"net.mooctest.Rule.toString()Ljava/lang/String;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testRule()V"
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;"
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogGets()V"
	"net.mooctest.Datalog.getPredicate()Lnet/mooctest/Predicate;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.getPredicate()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.blowConstructor1()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogSames()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/Program net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.blowConstructor2()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.initialize()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogGets()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.test()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.equals()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.initialize()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.hashCodeTest()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.toFact()V"
	"net.mooctest.Datalog.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Argument;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.initialize()V"
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "Lnet/mooctest/Rule net.mooctest.Rule.toString()Ljava/lang/String;"
	"net.mooctest.Datalog.toString()Ljava/lang/String;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Argument.isValue()Z" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Argument.isValue()Z" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.toFact()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.substituteTo()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest3 net.mooctest.DatalogTest3.testFact()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.blowTestFact2()V"
	"net.mooctest.Fact.<init>(Lnet/mooctest/Predicate;[Lnet/mooctest/Value;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.blowTestFact()V"
	"net.mooctest.Program.getProgram()[Lnet/mooctest/Rule;" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.testProgram()V"
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "Lnet/mooctest/Fact net.mooctest.Fact.toString()Ljava/lang/String;"
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "Lnet/mooctest/Argument net.mooctest.Argument.toString()Ljava/lang/String;"
	"net.mooctest.Value.toString()Ljava/lang/String;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testValue()V"
	"net.mooctest.Value.hashCode()I" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testValue()V"
	"net.mooctest.Argument.toString()Ljava/lang/String;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.toString()Ljava/lang/String;"
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;"
	"net.mooctest.Value.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testValue()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogSames()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.blowTestValue()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogGets()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest3 net.mooctest.DatalogTest3.testFact()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.test()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.<init>()V"
	"net.mooctest.Value.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testValue()V"
	"net.mooctest.Program.query(Lnet/mooctest/Datalog;[Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;" -> "Lnet/mooctest/Program net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z"
	"net.mooctest.Rule.getHead()Lnet/mooctest/Datalog;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testRule()V"
	"net.mooctest.Argument.isVariable()Z" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;"
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable3()V"
	"net.mooctest.Variable.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testVariable3()V"
	"net.mooctest.Program.valToArg([Lnet/mooctest/Value;)[Lnet/mooctest/Argument;" -> "Lnet/mooctest/Program net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z"
	"net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.toFact()V"
	"net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;" -> "Lnet/mooctest/Rule net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable3()V"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable2()V"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable()V"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable_0()V"
	"net.mooctest.Variable.<init>(Ljava/lang/String;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testVariable3()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogSames()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalog2()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/Program net.mooctest.Program.valToArg([Lnet/mooctest/Value;)[Lnet/mooctest/Argument;"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.testDatalogGets()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.test()V"
	"net.mooctest.Argument.value(Lnet/mooctest/Value;)Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.<init>()V"
	"net.mooctest.Datalog.getArguments()[Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.getArguments()V"
	"net.mooctest.Datalog.getArguments()[Lnet/mooctest/Argument;" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;"
	"net.mooctest.Datalog.getArguments()[Lnet/mooctest/Argument;" -> "Lnet/mooctest/DatalogTest1 net.mooctest.DatalogTest1.test()V"
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/Fact net.mooctest.Fact.equals(Ljava/lang/Object;)Z"
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.equals(Ljava/lang/Object;)Z"
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testPredicate()V"
	"net.mooctest.Predicate.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Predicate.hashCode()I" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testPredicate()V"
	"net.mooctest.Predicate.hashCode()I" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.hashCode()I"
	"net.mooctest.Predicate.hashCode()I" -> "Lnet/mooctest/Fact net.mooctest.Fact.hashCode()I"
	"net.mooctest.Program.deriveAll([Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;" -> "Lnet/mooctest/Program net.mooctest.Program.query(Lnet/mooctest/Datalog;[Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;"
	"net.mooctest.Fact.toString()Ljava/lang/String;" -> "Lnet/mooctest/DatalogTest3 net.mooctest.DatalogTest3.testFact()V"
	"net.mooctest.Substitution.<init>()V" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Substitution.<init>()V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Substitution.<init>()V" -> "Lnet/mooctest/Rule net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;"
	"net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.extendAll(Ljava/util/LinkedList;)Ljava/util/LinkedList;"
	"net.mooctest.Substitution.<init>(Ljava/util/LinkedList;Ljava/util/LinkedList;)V" -> "Lnet/mooctest/Substitution net.mooctest.Substitution.extend(Lnet/mooctest/Variable;Lnet/mooctest/Value;)Lnet/mooctest/Substitution;"
	"net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "Lnet/mooctest/Rule net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;"
	"net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;" -> "Lnet/mooctest/Rule net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;"
	"net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;" -> "Lnet/mooctest/Program net.mooctest.Program.deriveAll([Lnet/mooctest/Fact;)[Lnet/mooctest/Fact;"
	"net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.compatibleWith(Lnet/mooctest/Fact;)Z"
	"net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;" -> "Lnet/mooctest/Rule net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;"
	"net.mooctest.Variable.getIdentifier()Ljava/lang/String;" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable2()V"
	"net.mooctest.Variable.getIdentifier()Ljava/lang/String;" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable()V"
	"net.mooctest.Fact.getValues()[Lnet/mooctest/Value;" -> "Lnet/mooctest/Program net.mooctest.Program.canDerive(Lnet/mooctest/Fact;[Lnet/mooctest/Fact;)Z"
	"net.mooctest.Fact.getValues()[Lnet/mooctest/Value;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Variable.hashCode()I" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable3()V"
	"net.mooctest.Variable.hashCode()I" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testVariable3()V"
	"net.mooctest.Datalog.equals(Ljava/lang/Object;)Z" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.equals()V"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.substituteTo(Lnet/mooctest/Fact;)Lnet/mooctest/Substitution;"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/Datalog net.mooctest.Datalog.toFact()Lnet/mooctest/Fact;"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.toFact()V"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/DatalogTest net.mooctest.DatalogTest.substituteTo()V"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Argument.getValue()Lnet/mooctest/Value;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
	"net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testSubstitution()V"
	"net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;" -> "Lnet/mooctest/Rule net.mooctest.Rule.findAllSubstitutions(Ljava/util/Collection;Ljava/util/LinkedList;)Ljava/util/LinkedList;"
	"net.mooctest.Substitution.applyOn(Lnet/mooctest/Datalog;)Lnet/mooctest/Datalog;" -> "Lnet/mooctest/Rule net.mooctest.Rule.deriveOnce(Ljava/util/Collection;)Ljava/util/LinkedList;"
	"net.mooctest.Predicate.getName()Ljava/lang/String;" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.testPredicate()V"
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "Lnet/mooctest/DatalogTest2 net.mooctest.DatalogTest2.testVariable2()V"
	"net.mooctest.Variable.toString()Ljava/lang/String;" -> "Lnet/mooctest/Argument net.mooctest.Argument.toString()Ljava/lang/String;"
	"net.mooctest.Program.<init>([Lnet/mooctest/Rule;)V" -> "Lnet/mooctest/DatalogTest5 net.mooctest.DatalogTest5.<init>()V"
	"net.mooctest.Program.<init>([Lnet/mooctest/Rule;)V" -> "Lnet/mooctest/DatalogTest4 net.mooctest.DatalogTest4.<init>()V"
	"net.mooctest.Program.<init>([Lnet/mooctest/Rule;)V" -> "Lnet/mooctest/DatalogOtherTest net.mooctest.DatalogOtherTest.<init>()V"
}